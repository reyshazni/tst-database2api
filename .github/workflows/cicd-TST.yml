name: Staging CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: "reyshazni/tst-service-kirim"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build --platform linux/amd64 -t $(echo $IMAGE_NAME) .

      - name: Build the Docker image
        run: docker push $(echo $IMAGE_NAME)

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            echo "running script in server"
            # Login Docker
            docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            # Pull image
            docker pull reyshazni/tst-service-kirim
            echo "new image pulled"
            # Stop running container
            docker stop rey-container
            echo "old container stopped"
            # Remove old container
            docker rm rey-container
            echo "old container removed"
            # Remove dangling image
            docker image prune -a
            yes | head -1
            echo "dangling image removed"
            # Run image and open port
            docker run -d -p 80:8000 --name rey-container reyshazni/tst-service-kirim
            echo "container started succesfully"
            docker cp /usr/share/rey/.env rey-container:/app/.env